/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.universitysystem;

//import com.mycompany.universitysystem.ConnectionUtil;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DCN
 */
public class SetResult extends javax.swing.JFrame {
    /**
     * Creates new form SetResult
     */
    int id;
    public SetResult() {
        initComponents();
        updateResultList();
    }
    
    public SetResult(String n, int m)
    {
        initComponents();
        int rollno = Integer.parseInt(n);
        id = m;
        fetchStudentDetails(rollno);
        updateResultList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbBranch = new javax.swing.JLabel();
        lbCourse = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        tfMaxMarks = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tfSetMarks = new javax.swing.JTextField();
        lbError = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lbRollNo = new javax.swing.JLabel();
        cbSem = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(120, 137, 146));
        jPanel1.setPreferredSize(new java.awt.Dimension(877, 505));

        jPanel2.setBackground(new java.awt.Color(207, 207, 207));
        jPanel2.setPreferredSize(new java.awt.Dimension(823, 505));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Elephant", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(17, 33, 45));
        jLabel2.setText("Set Result");

        jPanel3.setBackground(new java.awt.Color(236, 235, 235));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 20, 27)));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(17, 33, 45));
        jLabel4.setText("Course");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(17, 33, 45));
        jLabel10.setText("Roll number");

        lbName.setFont(new java.awt.Font("Elephant", 0, 17)); // NOI18N
        lbName.setForeground(new java.awt.Color(41, 72, 89));
        lbName.setText(" ");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(17, 33, 45));
        jLabel5.setText("Name");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(17, 33, 45));
        jLabel6.setText("Branch");

        lbBranch.setFont(new java.awt.Font("Elephant", 0, 17)); // NOI18N
        lbBranch.setForeground(new java.awt.Color(41, 72, 89));
        lbBranch.setText(" ");

        lbCourse.setFont(new java.awt.Font("Elephant", 0, 17)); // NOI18N
        lbCourse.setForeground(new java.awt.Color(41, 72, 89));
        lbCourse.setText(" ");

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(17, 33, 45));
        jLabel18.setText("Semester");

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(17, 33, 45));
        jLabel21.setText("Maximum marks");

        tfMaxMarks.setFont(new java.awt.Font("Engravers MT", 1, 20)); // NOI18N
        tfMaxMarks.setForeground(new java.awt.Color(41, 72, 89));
        tfMaxMarks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfMaxMarks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 20, 27)));
        tfMaxMarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaxMarksActionPerformed(evt);
            }
        });

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Elephant", 0, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(17, 33, 45));
        jLabel20.setText("Marks obtained");

        tfSetMarks.setFont(new java.awt.Font("Engravers MT", 1, 20)); // NOI18N
        tfSetMarks.setForeground(new java.awt.Color(41, 72, 89));
        tfSetMarks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfSetMarks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 20, 27)));
        tfSetMarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSetMarksActionPerformed(evt);
            }
        });

        lbError.setFont(new java.awt.Font("Elephant", 0, 15)); // NOI18N
        lbError.setForeground(new java.awt.Color(193, 55, 55));

        btnSubmit.setBackground(new java.awt.Color(6, 20, 27));
        btnSubmit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Update");
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSubmit.setMaximumSize(new java.awt.Dimension(64, 18));
        btnSubmit.setMinimumSize(new java.awt.Dimension(64, 18));
        btnSubmit.setPreferredSize(new java.awt.Dimension(64, 18));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lbRollNo.setFont(new java.awt.Font("Elephant", 0, 17)); // NOI18N
        lbRollNo.setForeground(new java.awt.Color(41, 72, 89));
        lbRollNo.setText(" ");

        cbSem.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        cbSem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        cbSem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 20, 27)));
        cbSem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbSem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbSemMouseClicked(evt);
            }
        });
        cbSem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(lbCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(lbBranch, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(lbRollNo, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(cbSem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfMaxMarks))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfSetMarks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lbError, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbRollNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCourse))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBranch))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSem))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMaxMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSetMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(236, 235, 235));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 20, 27)));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Elephant", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(17, 33, 45));
        jLabel3.setText("Result List");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(101, 101, 101))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(169, 169, 169));
        jButton1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jButton1.setText("←");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37, 55, 69)));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(291, 291, 291))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfMaxMarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaxMarksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaxMarksActionPerformed

    private void tfSetMarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSetMarksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSetMarksActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(tfSetMarks.getText().isEmpty() && tfMaxMarks.getText().isEmpty())
        {
            lbError.setText("Kindly enter the marks obtained and maximum marks.");
        }
        else{
            try {
                int rollno = Integer.parseInt(lbRollNo.getText());
                float marksObtained = Float.parseFloat(tfSetMarks.getText());
                float maxMarks = Float.parseFloat(tfMaxMarks.getText());
                
                Connection conn = ConnectionUtil.getInstance();
                
                String course = lbCourse.getText();
                String branch = lbBranch.getText();
                String semester = (String) cbSem.getSelectedItem(); 
                
                String checkMaxMarksSql = "SELECT max_marks FROM result WHERE course = ? AND branch = ? AND semester = ?";
                PreparedStatement pstCheck = conn.prepareStatement(checkMaxMarksSql);
                pstCheck.setString(1, course);
                pstCheck.setString(2, branch);
                pstCheck.setString(3, semester);
                ResultSet rsCheck = pstCheck.executeQuery();
                
                if (rsCheck.next()) {
                    int currentMaxMarks = rsCheck.getInt("max_marks");
                    
                     if (currentMaxMarks != maxMarks) {
                        String updateMaxMarksSql = "UPDATE result SET max_marks = ? WHERE course = ? AND branch = ? AND semester = ?";
                        PreparedStatement pstUpdate = conn.prepareStatement(updateMaxMarksSql);
                        pstUpdate.setFloat(1, maxMarks);
                        pstUpdate.setString(2, course);
                        pstUpdate.setString(3, branch);
                        pstUpdate.setString(4, semester);
                        pstUpdate.executeUpdate();
                     }
                }
                else {
                    String insertResultSql = "INSERT INTO result (course, branch, semester, max_marks) VALUES (?, ?, ?, ?)";
                    PreparedStatement pstInsert = conn.prepareStatement(insertResultSql);
                    pstInsert.setString(1, course);
                    pstInsert.setString(2, branch);
                    pstInsert.setString(3, semester);
                    pstInsert.setFloat(4, maxMarks);
                    pstInsert.executeUpdate();
                } 
                
                String insertSql = "INSERT INTO result_list (result_id, name, student_id, marks_obtained) VALUES (?, ?, ?, ?)";
                PreparedStatement pst = conn.prepareStatement(insertSql);
                
                String resultIdSql = "SELECT id FROM result WHERE course = ? AND branch = ? AND semester = ?";
                PreparedStatement pstResultId = conn.prepareStatement(resultIdSql);
                pstResultId.setString(1, course);
                pstResultId.setString(2, branch);
                pstResultId.setString(3, semester);
                ResultSet rsResultId = pstResultId.executeQuery();  
                
                if (rsResultId.next()) {
                int resultId = rsResultId.getInt("id");
                pst.setInt(1, resultId);
                pst.setString(2, lbName.getText());
                pst.setInt(3, rollno);
                pst.setFloat(4, marksObtained);
                
                pst.executeUpdate();
                updateResultList();

                lbError.setText("Result submitted successfully.");
                updateResultList();
                }
                else {
                lbError.setText("Result ID not found for the given course, branch, and semester.");
            }

            
        }   catch (SQLException ex) {
                Logger.getLogger(SetResult.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }//GEN-LAST:event_btnSubmitActionPerformed
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        StudentsList sl;
        sl = new StudentsList(id);
        sl.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbSemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSemActionPerformed

    private void cbSemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbSemMouseClicked
        // TODO add your handling code here: 
                String course = lbCourse.getText();
                String branch = lbBranch.getText();
                String semester = (String) cbSem.getSelectedItem(); 
                
                String checkMaxMarksSql = "SELECT max_marks FROM result WHERE course = ? AND branch = ? AND semester = ?";
                PreparedStatement pstCheck; 
        try {
            Connection conn = ConnectionUtil.getInstance();
            pstCheck = conn.prepareStatement(checkMaxMarksSql);
            pstCheck.setString(1, course);
            pstCheck.setString(2, branch);
            pstCheck.setString(3, semester);
            ResultSet rsCheck = pstCheck.executeQuery();
            
            if(rsCheck.next())
            {
                float max_marks = rsCheck.getFloat("max_marks");
                tfMaxMarks.setText(String.valueOf(max_marks));
            }
            else
            {
                tfMaxMarks.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(SetResult.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbSemMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetResult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbSem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbBranch;
    private javax.swing.JLabel lbCourse;
    private javax.swing.JLabel lbError;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbRollNo;
    private javax.swing.JTextField tfMaxMarks;
    private javax.swing.JTextField tfSetMarks;
    // End of variables declaration//GEN-END:variables

public void fetchStudentDetails(int rollno)
{
    String sql = "SELECT name, course, branch from students where rollno = ?";
        try {
            Connection conn = ConnectionUtil.getInstance();
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, rollno);
            ResultSet rs = pst.executeQuery();
            
            if(rs.next())
            {
                String name = rs.getString("name");
                String course = rs.getString("course");
                String branch = rs.getString("branch");
                
                lbName.setText(name);
                lbCourse.setText(course);
                lbBranch.setText(branch);
                lbRollNo.setText( String.valueOf(rollno));   
            }
            
            String course = lbCourse.getText();
            String branch = lbBranch.getText();
            int semester = 1; 
                
            String checkMaxMarksSql = "SELECT max_marks FROM result WHERE course = ? AND branch = ? AND semester = ?";
            PreparedStatement pstCheck; 
       
            pstCheck = conn.prepareStatement(checkMaxMarksSql);
            pstCheck.setString(1, course);
            pstCheck.setString(2, branch);
            pstCheck.setInt(3, semester);
            ResultSet rsCheck = pstCheck.executeQuery();
            
            if(rsCheck.next())
            {
                float max_marks = rsCheck.getFloat("max_marks");
                tfMaxMarks.setText(String.valueOf(max_marks));
            }
        } catch (SQLException ex) {
            Logger.getLogger(SetResult.class.getName()).log(Level.SEVERE, null, ex);
        }
}

public void updateResultList() {
    String sql = "Select * from result_list";
    
    try {
        Connection conn = ConnectionUtil.getInstance();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);

        // Create a table model manually
        DefaultTableModel model = new DefaultTableModel();
        
        // Get metadata for column names
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();

        // Add column names to the model
        for (int column = 1; column <= columnCount; column++) {
            model.addColumn(metaData.getColumnName(column));
        }

        // Add rows to the model
        while (rs.next()) {
            Object[] rowData = new Object[columnCount];
            for (int i = 0; i < columnCount; i++) {
                rowData[i] = rs.getObject(i + 1);
            }
            model.addRow(rowData);
        }

        // Set the model to the table
        jTable1.setModel(model);

    } catch (SQLException ex) {
        Logger.getLogger(SetResult.class.getName()).log(Level.SEVERE, null, ex);
    }
}


}